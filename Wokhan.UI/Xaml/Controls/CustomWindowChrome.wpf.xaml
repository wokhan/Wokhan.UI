<UserControl x:Class="Wokhan.UI.Xaml.Controls.CustomWindowChrome"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d"
             d:DesignHeight="34" d:DesignWidth="700" 
             DataContext="{Binding RelativeSource={RelativeSource Mode=Self}}">
    <UserControl.Resources>
        <Style TargetType="Button" BasedOn="{x:Null}">
            <Style.Setters>
                <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
                <Setter Property="FontFamily" Value="Segoe MDL2 Assets" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="Width" Value="40" />
                <Setter Property="Height" Value="30" />
                <Setter Property="Background" Value="Transparent" />
            </Style.Setters>
        </Style>
    </UserControl.Resources>
    <Grid>
        <StackPanel Orientation="Horizontal" HorizontalAlignment="{Binding TitleAlignment}">
            <Image Stretch="Uniform" Source="{Binding Window.Icon}" VerticalAlignment="Stretch" Style="{Binding IconStyle}" />
            <TextBlock Margin="15,0,0,0"  FontSize="16" VerticalAlignment="Center" Style="{Binding TitleStyle}" Text="{Binding Window.Title,FallbackValue='Window title'}" />
        </StackPanel>
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Top">
            <StackPanel x:Name="ChildrenHost" Orientation="Horizontal" />
            <StackPanel Orientation="Horizontal">
                <Button Command="{x:Static SystemCommands.MinimizeWindowCommand}" Content="&#xE949;" Visibility="{Binding MinimizeButtonVisibility}" />
                <Button Visibility="{Binding MaximizeButtonVisibility}">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                            <Setter Property="Content" Value="&#xE739;" />
                            <Setter Property="Command" Value="{x:Static SystemCommands.MaximizeWindowCommand}" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsWindowMaximized}" Value="True">
                                    <Setter Property="Content" Value="&#xE923;" />
                                    <Setter Property="Command" Value="{x:Static SystemCommands.RestoreWindowCommand}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button Command="{x:Static SystemCommands.CloseWindowCommand}" Content="&#xE106;">
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <Border Name="Border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                                <ContentPresenter Name="Content" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" TextBlock.FontFamily="{TemplateBinding FontFamily}" TextBlock.FontSize="{TemplateBinding FontSize}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="Red" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
            </StackPanel>
        </StackPanel>
    </Grid>
</UserControl>
